class Solution:

    def isValidSudoku(self, board: list) -> bool:
        g = [[1, 2, 3],
             [4, 5, 6],
             [7, 8, 9]]
        gds = list()

        for i in range(3):
            for j in range(3):
                gds.append([g[i], g[j]])

        g = list()
        for i in gds:
            # print(i)
            _ = list()
            for j in i[0]:
                for k in i[1]:
                    _.append([j, k])
            g.append(_)
            # print(_)
        # print(len(g))
        for i in range(9):
            rw = [int(board[i][j]) for j in range(9) if board[i][j] != '.']
            cl = [int(board[j][i]) for j in range(9) if board[j][i] != '.']
            gd = [int(board[j[0]-1][j[1]-1]) for j in g[i] if board[j[0]-1][j[1]-1] != '.']
            if len(set(rw)) != len(rw) or len(set(cl)) != len(cl) or len(set(gd)) != len(gd):
                return False
        return True


f = Solution()
print(f.isValidSudoku(board=
                            [["5", "3", ".", ".", "7", ".", ".", ".", "."]
                          , ["6", ".", ".", "1", "9", "5", ".", ".", "."]
                          , [".", "9", "8", ".", ".", ".", ".", "6", "."]
                          , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
                          , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
                          , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
                          , [".", "6", ".", ".", ".", ".", "2", "8", "."]
                          , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
                          , [".", ".", ".", ".", "8", ".", ".", "7", "9"]]))
print(f.isValidSudoku(board=
                            [["8", "3", ".", ".", "7", ".", ".", ".", "."]
                          , ["6", ".", ".", "1", "9", "5", ".", ".", "."]
                          , [".", "9", "8", ".", ".", ".", ".", "6", "."]
                          , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
                          , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
                          , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
                          , [".", "6", ".", ".", ".", ".", "2", "8", "."]
                          , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
                          , [".", ".", ".", ".", "8", ".", ".", "7", "9"]]))
